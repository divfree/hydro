#!/usr/bin/env python

import mfer.post as mp
import numpy as np
import matplotlib.pyplot as plt
import os

ps = "."
ds = mp.get_series(ps, cache=0)
hs = mp.get_history(ds)
lbs = "hydro"



# plot contour
skip=1
for n in range(len(ds['x']))[::skip]:
    x = ds['x'][n]
    y = ds['y'][n]
    a = ds['f'][n]
    a = np.clip(a, 0.01, 0.99)

    fo = "cmap1a1contour_{:04d}.png".format(n)
    #if (os.path.exists(fo)):
    #    print("skip existing {:}".format(fo))
    #    continue
    fig = plt.figure(figsize=(6.4,3.6))
    fig.patch.set_facecolor('black')
    ax = plt.Axes(fig, [0., 0., 1., 1.])
    ax.set_axis_off()
    fig.add_axes(ax)
    #ax.tricontourf(x, y, a, 128, cmap=plt.cm.Greys_r, vmin=0., vmax=1.)
    ax.tricontourf(x, y, a, 128, cmap=plt.cm.hot, vmin=0., vmax=1.)
    #ax.tricontourf(x, y, a, 128, cmap=plt.cm.hot)
    #plt.tight_layout()
    print(fo)
    plt.savefig(fo, dpi=300)
    plt.close()

# plot contour
skip=1
for n in range(len(ds['x']))[::skip]:
    x = ds['x'][n]
    y = ds['y'][n]
    a = ds['v'][n]

    fo = "vel_{:04d}.png".format(n)
    fig = plt.figure(figsize=(6.4,3.6))
    fig.patch.set_facecolor('black')
    ax = plt.Axes(fig, [0., 0., 1., 1.])
    ax.set_axis_off()
    fig.add_axes(ax)
    ax.tricontourf(x, y, a, 128, cmap=plt.cm.hot)
    #plt.tight_layout()
    print(fo)
    plt.savefig(fo, dpi=300)
    plt.close()

